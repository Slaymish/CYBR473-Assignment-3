#include "anti_debug.h"
#include <windows.h>

// Portable anti-debugging techniques
bool is_debugger_present() {
    // Basic IsDebuggerPresent check
    if (IsDebuggerPresent()) {
        return true;
    }

    // Check PEB BeingDebugged flag (portable way)
    BOOL debugger = FALSE;
#if defined(_M_IX86) || defined(__i386__)
    __try {
        // On x86, access PEB directly
        PBYTE pPEB = (PBYTE)__readfsdword(0x30);
        if (pPEB && pPEB[2]) {
            debugger = TRUE;
        }
    } __except (EXCEPTION_EXECUTE_HANDLER) {}
#endif

    // Check NtGlobalFlag in PEB (portable way)
#if defined(_M_IX86) || defined(__i386__)
    __try {
        PBYTE pPEB = (PBYTE)__readfsdword(0x30);
        if (pPEB) {
            DWORD ntGlobalFlag = *(PDWORD)(pPEB + 0x68);
            if (ntGlobalFlag & 0x70) {
                debugger = TRUE;
            }
        }
    } __except (EXCEPTION_EXECUTE_HANDLER) {}
#endif

    return debugger ? true : false;
}